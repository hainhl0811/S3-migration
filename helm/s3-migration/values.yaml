# Default values for s3-migration
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.gitlab.com/hainhl0811/cmc-example-deploy/s3-migration
  pullPolicy: Always
  tag: "v2.0.0"

imagePullSecrets: []
# - name: gitlab-registry-secret

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8000
  annotations: {}

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: s3-migration.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: s3-migration-tls
  #    hosts:
  #      - s3-migration.example.com

resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

persistence:
  data:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 10Gi
    # existingClaim: ""
  
  logs:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 5Gi
    # existingClaim: ""
  
  state:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 1Gi
    # existingClaim: ""

# Environment variables
env:
  PORT: "8000"
  GIN_MODE: "release"

# Secrets configuration
secrets:
  encryptionKey: ""  # Leave empty to auto-generate
  # Or provide a base64-encoded 32-byte key

# Health check configuration
livenessProbe:
  httpGet:
    path: /api/health
    port: 8000
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /api/health
    port: 8000
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

nodeSelector: {}

tolerations: []

affinity: {}

