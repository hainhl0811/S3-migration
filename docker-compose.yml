# ============================================
# S3 Migration Tool - Docker Compose
# ============================================
version: '3.8'

services:
  # ============================================
  # Main S3 Migration Service
  # ============================================
  s3migration:
    image: registry.gitlab.com/hainhl0811/cmc-example-deploy/s3-migration:v2.0.8
    container_name: s3migration
    ports:
      - "8000:8000"
    environment:
      # Server configuration
      - PORT=8000
      - GIN_MODE=release
      
      # Security: Encryption key for sensitive data (REQUIRED in production)
      # ENCRYPTION_KEY is now auto-generated if not provided
      # - ENCRYPTION_KEY=${ENCRYPTION_KEY:-s3migration-key-32bytes-long!!}
      
      # AWS credentials (if using AWS)
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      
      # Or S3-compatible credentials
      # - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      # - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      # - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      # - S3_PROVIDER=${S3_PROVIDER:-aws}
    volumes:
      # Mount state directory for persistence
      - ./data/state:/app/data/state
      # Mount config if using file-based config
      - ./config:/app/config:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - s3migration-network

  # ============================================
  # Example: With Local MinIO for Testing
  # ============================================
  # Uncomment to run with local MinIO
  # minio:
  #   image: minio/minio:latest
  #   container_name: minio
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   environment:
  #     - MINIO_ROOT_USER=minioadmin
  #     - MINIO_ROOT_PASSWORD=minioadmin
  #   command: server /data --console-address ":9001"
  #   volumes:
  #     - minio-data:/data
  #   networks:
  #     - s3migration-network

  # ============================================
  # Example: Complete Stack with MinIO
  # ============================================
  # s3migration-with-minio:
  #   extends: s3migration
  #   depends_on:
  #     - minio
  #   environment:
  #     - S3_ACCESS_KEY_ID=minioadmin
  #     - S3_SECRET_ACCESS_KEY=minioadmin
  #     - S3_ENDPOINT_URL=http://minio:9000
  #     - S3_PROVIDER=minio

networks:
  s3migration-network:
    driver: bridge

volumes:
  minio-data:
    driver: local

# ============================================
# Usage Examples
# ============================================
#
# 1. Start the service:
#    docker-compose up -d
#
# 2. View logs:
#    docker-compose logs -f s3migration
#
# 3. Stop the service:
#    docker-compose down
#
# 4. Rebuild after changes:
#    docker-compose up -d --build
#
# 5. Test with MinIO:
#    Uncomment minio service and run:
#    docker-compose up -d minio s3migration
#
# ============================================

